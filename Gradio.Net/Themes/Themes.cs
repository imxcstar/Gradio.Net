using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Gradio.Net.Themes
{
    public static class Themes
    {
        public static Theme Default => new Theme("default", new Dictionary<string, string>
            {
               { nameof(Theme.InputBackgroundFillDark), "*neutral_800" },
{ nameof(Theme.ErrorBackgroundFill), Colors.Red.C50 },
{ nameof(Theme.ErrorBackgroundFillDark), "*neutral_900" },
{ nameof(Theme.ErrorBorderColor), Colors.Red.C700 },
{ nameof(Theme.ErrorBorderColorDark), Colors.Red.C500 },
{ nameof(Theme.ErrorIconColor), Colors.Red.C700 },
{ nameof(Theme.ErrorIconColorDark), Colors.Red.C500 },
{ nameof(Theme.InputShadowFocus),"0 0 0 *shadow_spread *secondary_50, *shadow_inset"},
{ nameof(Theme.InputShadowFocusDark), "0 0 0 *shadow_spread *neutral_700, *shadow_inset" },
{ nameof(Theme.ButtonBorderWidth), "0px" },
{ nameof(Theme.InputBorderWidth), "1px" },
{ nameof(Theme.InputBackgroundFill), "white" },
{ nameof(Theme.StatBackgroundFill),"linear-gradient(to right, *primary_400, *primary_200)" },
{ nameof(Theme.StatBackgroundFillDark), "linear-gradient(to right, *primary_400, *primary_600)" },
{ nameof(Theme.CheckboxLabelBackgroundFill), "*background_fill_primary" },
{ nameof(Theme.CheckboxLabelBackgroundFillDark), "*neutral_800" },
{ nameof(Theme.CheckboxLabelBackgroundFillHover), "*background_fill_secondary" },
{ nameof(Theme.CheckboxLabelBackgroundFillHoverDark), "*checkbox_label_background_fill" },
{ nameof(Theme.ButtonPrimaryBackgroundFill), "*primary_500" },
{ nameof(Theme.ButtonPrimaryBackgroundFillDark), "*primary_600" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHover), "*primary_600" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHoverDark), "*primary_700" },
{ nameof(Theme.ButtonPrimaryTextColor), "white" },
{ nameof(Theme.ButtonPrimaryTextColorDark), "white" },
{ nameof(Theme.ButtonSecondaryBackgroundFill), "*neutral_200" },
{ nameof(Theme.ButtonSecondaryBackgroundFillDark), "*neutral_600" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHover), "*neutral_300" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHoverDark), "*neutral_700" },
{ nameof(Theme.ButtonSecondaryTextColor), "black" },
{ nameof(Theme.ButtonSecondaryTextColorDark), "white" },
{ nameof(Theme.ButtonCancelBackgroundFill), Colors.Red.C500 },
{ nameof(Theme.ButtonCancelBackgroundFillDark), Colors.Red.C700 },
{ nameof(Theme.ButtonCancelBackgroundFillHover), Colors.Red.C600 },
{ nameof(Theme.ButtonCancelBackgroundFillHoverDark), Colors.Red.C800 },
{ nameof(Theme.ButtonCancelTextColor), "white" },
{ nameof(Theme.ButtonCancelTextColorDark), "white" },
{ nameof(Theme.ButtonCancelTextColorHover), "white" },
{ nameof(Theme.ButtonCancelTextColorHoverDark), "white" },
{ nameof(Theme.BorderColorAccentSubdued), "*primary_200" },


            },
            primaryHue: Colors.Orange,
        secondaryHue: Colors.Blue,
        neutralHue: Colors.Zinc,
        spacingSize: Sizes.SpacingMd,
        radiusSize: Sizes.RadiusMd,
        textSize: Sizes.TextMd,
                fonts: new List<Font> { new GoogleFont("Source Sans Pro"), new LocalFont("ui-sans-serif"), new LocalFont("system-ui"), new LocalFont("sans-serif") },
        fontMonos: new List<Font> { new LocalFont("IBM Plex Mono"), new LocalFont("ui-monospace"), new LocalFont("Consolas"), new LocalFont("monospace") });

        public static Theme Citrus => new Theme("citrus", new Dictionary<string, string>
            {
              { nameof(Theme.SliderColor), "*primary_400" },
{ nameof(Theme.BackgroundFillPrimary), "*neutral_50" },
{ nameof(Theme.ButtonPrimaryBackgroundFill), "*primary_500" },
{ nameof(Theme.ButtonPrimaryTextColor), "*button_secondary_text_color" },
{ nameof(Theme.ButtonSecondaryBackgroundFill), "*primary_400" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHover), "*button_primary_background_fill" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHover), "*button_secondary_background_fill" },
{ nameof(Theme.ButtonPrimaryShadowHover), "0px 5px 0px 0px *primary_400;" },
{ nameof(Theme.ButtonPrimaryShadow), "0px 3px 0px 0px *primary_400;" },
{ nameof(Theme.ButtonPrimaryShadowActive), "0px 2px 0px 0px *primary_400;" },
{ nameof(Theme.ButtonSecondaryShadowHover), "0px 5px 0px 0px *primary_300;" },
{ nameof(Theme.ButtonSecondaryShadow), "0px 3px 0px 0px *primary_300;" },
{ nameof(Theme.ButtonSecondaryShadowActive), "0px 2px 0px 0px *primary_300;" },
{ nameof(Theme.InputShadow), "0px -1px 0px 0px *neutral_300;" },
{ nameof(Theme.InputShadowFocus), "0px -1px 0px 0px *primary_300;" },
{ nameof(Theme.InputBackgroundFill), "*neutral_50" },
{ nameof(Theme.InputBackgroundFillFocus), "*primary_50" },
{ nameof(Theme.BlockShadow), "0px 3px 0px 0px *neutral_300;" },
{ nameof(Theme.CheckboxLabelBackgroundFill), "*neutral_200" },
{ nameof(Theme.CheckboxLabelBackgroundFillHover), "*checkbox_label_background_fill" },
{ nameof(Theme.CheckboxLabelBackgroundFillSelected), "*primary_400" },
{ nameof(Theme.CheckboxLabelBorderColorSelected), "*primary_300" },
{ nameof(Theme.CheckboxLabelBorderWidth), "2px" },
{ nameof(Theme.SliderColorDark), "*primary_500" },
{ nameof(Theme.ButtonPrimaryBackgroundFillDark), "*primary_600" },
{ nameof(Theme.ButtonSecondaryTextColorDark), "*neutral_900" },
{ nameof(Theme.ButtonPrimaryTextColorDark), "*button_secondary_text_color" },
{ nameof(Theme.ButtonSecondaryBackgroundFillDark), "*primary_500" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHoverDark), "*button_primary_background_fill" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHoverDark), "*button_secondary_background_fill" },
{ nameof(Theme.ButtonPrimaryShadowHoverDark), "0px 5px 0px 0px *primary_700;" },
{ nameof(Theme.ButtonPrimaryShadowDark), "0px 3px 0px 0px *primary_700;" },
{ nameof(Theme.ButtonPrimaryShadowActiveDark), "0px 2px 0px 0px *primary_700;" },
{ nameof(Theme.ButtonSecondaryShadowHoverDark), "0px 5px 0px 0px *primary_600;" },
{ nameof(Theme.ButtonSecondaryShadowDark), "0px 3px 0px 0px *primary_600;" },
{ nameof(Theme.ButtonSecondaryShadowActiveDark), "0px 2px 0px 0px *primary_600;" },
{ nameof(Theme.InputShadowDark), "0px -1px 0px 0px *neutral_700;" },
{ nameof(Theme.InputShadowFocusDark), "0px -1px 0px 0px *primary_600;" },
{ nameof(Theme.InputBackgroundFillDark), "*neutral_900" },
{ nameof(Theme.InputBackgroundFillFocusDark), "none" },
{ nameof(Theme.BlockShadowDark), "0px 3px 0px 0px *neutral_700;" },
{ nameof(Theme.CheckboxLabelBackgroundFillDark), "*neutral_700" },
{ nameof(Theme.CheckboxLabelBackgroundFillHoverDark), "*checkbox_label_background_fill" },
{ nameof(Theme.CheckboxLabelBackgroundFillSelectedDark), "*primary_500" },
{ nameof(Theme.CheckboxLabelBorderColorSelectedDark), "*primary_600" },
{ nameof(Theme.CheckboxLabelTextColorSelectedDark), "*button_primary_text_color" },
{ nameof(Theme.CheckboxBackgroundColorSelectedDark), "*primary_600" },
{ nameof(Theme.CheckboxBackgroundColorDark), "*neutral_400" },
{ nameof(Theme.CheckboxLabelBorderWidthDark), "2px" },
{ nameof(Theme.ButtonTransformHover), "translateY(-2px);" },
{ nameof(Theme.ButtonTransformActive), "translateY(1px);" },
{ nameof(Theme.ButtonTransition), "all 0.1s;" },
{ nameof(Theme.ButtonBorderWidth), "0px" },
{ nameof(Theme.PanelBorderWidth), "1px" },
{ nameof(Theme.BlockBorderWidth), "1px" },
{ nameof(Theme.BlockBorderColor), "*neutral_300" },
{ nameof(Theme.BlockBackgroundFill), "*neutral_100" },
{ nameof(Theme.InputBorderWidth), "1px" },
{ nameof(Theme.BlockLabelShadow), "none" },
{ nameof(Theme.CheckboxShadow), "none" },

            },
            primaryHue: Colors.Amber,
        secondaryHue: Colors.Amber,
        neutralHue: Colors.Stone,
        spacingSize: Sizes.SpacingLg,
        radiusSize: Sizes.RadiusMd,
        textSize: Sizes.TextMd,
        fonts: new List<Font> { new GoogleFont("Ubuntu"), new LocalFont("ui-sans-serif"), new LocalFont("system-ui"), new LocalFont("sans-serif") },
        fontMonos: new List<Font> { new GoogleFont("Roboto Mono"), new LocalFont("ui-monospace"), new LocalFont("Consolas"), new LocalFont("monospace") }
        );

        public static Theme Glass => new Theme("glass", new Dictionary<string, string>
            {
              { nameof(Theme.BodyBackgroundFillDark), "*secondary_800" },
{ nameof(Theme.BackgroundFillSecondaryDark), "*secondary_800" },
{ nameof(Theme.BlockBackgroundFillDark), "*secondary_800" },
{ nameof(Theme.ButtonPrimaryBackgroundFill),"linear-gradient(180deg, *primary_100 0%, *primary_200 30%)" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHover),"linear-gradient(180deg, *primary_100 0%, *primary_200 30%)" },
{ nameof(Theme.ButtonPrimaryBackgroundFillDark),"linear-gradient(180deg, *primary_500 0%, *primary_600 30%)" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHoverDark), "linear-gradient(180deg, *primary_500 0%, *primary_600 30%)" },
{ nameof(Theme.ButtonPrimaryTextColor), "*body_text_color" },
{ nameof(Theme.ButtonPrimaryBorderColor), "*primary_200" },
{ nameof(Theme.ButtonPrimaryBorderColorHover), "*button_primary_border_color" },
{ nameof(Theme.ButtonSecondaryBackgroundFill), "linear-gradient(180deg, *secondary_100 0%, *secondary_200 30%)" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHover), "linear-gradient(180deg, *secondary_100 0%, *secondary_200 30%)" },
{ nameof(Theme.ButtonSecondaryBackgroundFillDark),"linear-gradient(180deg, *secondary_500 0%, *secondary_600 30%)" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHoverDark), "linear-gradient(180deg, *secondary_500 0%, *secondary_600 30%)" },
{ nameof(Theme.CheckboxBorderWidth), "0px" },
{ nameof(Theme.CheckboxBorderWidthDark), "0px" },
{ nameof(Theme.CheckboxLabelBackgroundFill), "*button_secondary_background_fill" },
{ nameof(Theme.CheckboxLabelBackgroundFillDark), "*button_secondary_background_fill" },
{ nameof(Theme.CheckboxLabelBackgroundFillHover), "*button_secondary_background_fill_hover" },
{ nameof(Theme.CheckboxLabelBackgroundFillHoverDark), "*button_secondary_background_fill_hover" },
{ nameof(Theme.CheckboxLabelBorderWidth), "1px" },
{ nameof(Theme.CheckboxLabelBorderWidthDark), "1px" },
{ nameof(Theme.CheckboxLabelBorderColorDark), "*secondary_700" },
{ nameof(Theme.CheckboxBackgroundColorDark), "*secondary_400" },
{ nameof(Theme.ButtonBorderWidth), "1px" },
{ nameof(Theme.ShadowInset), "rgba(0,0,0,0.05) 0px 1px 2px 0px inset" },
{ nameof(Theme.ButtonPrimaryShadowActive), "*shadow_inset" },
{ nameof(Theme.ButtonSecondaryShadowActive), "*shadow_inset" },
{ nameof(Theme.InputBackgroundFill),"linear-gradient(0deg, *secondary_100 0%, white 100%)" },
{ nameof(Theme.InputBackgroundFillDark), "*secondary_600" },
{ nameof(Theme.InputBorderColorFocusDark), "*secondary_500" },
{ nameof(Theme.InputBorderWidth), "1px" },
{ nameof(Theme.InputBorderColorDark), "*secondary_600" },
{ nameof(Theme.BlockLabelTextColor), "*secondary_500" },
{ nameof(Theme.BlockTitleTextColor), "*secondary_500" },
{ nameof(Theme.BlockLabelTextWeight), "600" },
{ nameof(Theme.BlockTitleTextWeight), "600" },
{ nameof(Theme.BlockLabelTextSize), "*text_md" },
{ nameof(Theme.BlockTitleTextSize), "*text_md" },
{ nameof(Theme.BlockLabelBackgroundFill), "*secondary_200" },
{ nameof(Theme.BlockLabelBackgroundFillDark), "*secondary_700" },
{ nameof(Theme.BlockLabelBorderColorDark), "*secondary_600" },
{ nameof(Theme.BlockBorderWidth), "0px" },
{ nameof(Theme.BlockBorderWidthDark), "1px" },
{ nameof(Theme.BlockBorderColorDark), "*secondary_600" },
{ nameof(Theme.PanelBorderWidth), "1px" },
{ nameof(Theme.BorderColorPrimaryDark), "*secondary_600" },
{ nameof(Theme.BackgroundFillPrimaryDark), "*neutral_700" },
{ nameof(Theme.BackgroundFillSecondary), "*secondary_100" },
{ nameof(Theme.BlockBackgroundFill), "*secondary_50" },
{ nameof(Theme.TableEvenBackgroundFillDark), "*neutral_700" },
{ nameof(Theme.TableOddBackgroundFillDark), "*neutral_700" },


            },
            primaryHue: Colors.Blue,
        secondaryHue: Colors.Slate,
        neutralHue: Colors.Slate,
        spacingSize: Sizes.SpacingSm,
        radiusSize: Sizes.RadiusSm,
        textSize: Sizes.TextSm,
        fonts: new List<Font> { new LocalFont("Optima"), new LocalFont("Candara"), new LocalFont("Noto Sans"), new LocalFont("source-sans-pro"), new LocalFont("sans-serif") },
        fontMonos: new List<Font> { new LocalFont("IBM Plex Mono"), new LocalFont("ui-monospace"), new LocalFont("Consolas"), new LocalFont("monospace") }
        );

        public static Theme Monochrome => new Theme("monochrome", new Dictionary<string, string>
        {
            { nameof(Theme.SliderColor), "*neutral_900" },
{ nameof(Theme.SliderColorDark), "*neutral_500" },
{ nameof(Theme.AccordionTextColor), "*body_text_color" },
{ nameof(Theme.AccordionTextColorDark), "*body_text_color" },
{ nameof(Theme.TableTextColor), "*body_text_color" },
{ nameof(Theme.TableTextColorDark), "*body_text_color" },
{ nameof(Theme.BodyTextColor), "*neutral_900" },
{ nameof(Theme.BlockLabelTextColor), "*body_text_color" },
{ nameof(Theme.BlockTitleTextColor), "*body_text_color" },
{ nameof(Theme.BodyTextColorSubdued), "*neutral_700" },
{ nameof(Theme.BackgroundFillPrimaryDark), "*neutral_900" },
{ nameof(Theme.BackgroundFillSecondaryDark), "*neutral_800" },
{ nameof(Theme.BlockBackgroundFillDark), "*neutral_800" },
{ nameof(Theme.InputBackgroundFillDark), "*neutral_700" },
{ nameof(Theme.ButtonBorderWidth), "2px" },
{ nameof(Theme.ButtonPrimaryBorderColor), "*neutral_900" },
{ nameof(Theme.ButtonPrimaryBackgroundFill), "*neutral_900" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHover), "*neutral_700" },
{ nameof(Theme.ButtonPrimaryTextColor), "white" },
{ nameof(Theme.ButtonPrimaryBackgroundFillDark), "*neutral_600" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHoverDark), "*neutral_600" },
{ nameof(Theme.ButtonPrimaryTextColorDark), "white" },
{ nameof(Theme.ButtonSecondaryBorderColor), "*neutral_900" },
{ nameof(Theme.ButtonSecondaryBackgroundFill), "white" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHover), "white" },
{ nameof(Theme.ButtonSecondaryBackgroundFillDark), "*neutral_700" },
{ nameof(Theme.ButtonSecondaryBorderColorHover), "*neutral_400" },
{ nameof(Theme.ButtonSecondaryTextColor), "*neutral_900" },
{ nameof(Theme.ButtonSecondaryTextColorHover), "*neutral_400" },
{ nameof(Theme.ButtonCancelBorderColor), "*neutral_900" },
{ nameof(Theme.ButtonCancelBackgroundFill), "*button_secondary_background_fill" },
{ nameof(Theme.ButtonCancelBackgroundFillHover), "*button_secondary_background_fill_hover" },
{ nameof(Theme.ButtonCancelTextColor), "*button_secondary_text_color" },
{ nameof(Theme.CheckboxLabelBorderColor), "*checkbox_background_color" },
{ nameof(Theme.CheckboxLabelBorderColorHover), "*button_secondary_border_color_hover" },
{ nameof(Theme.CheckboxLabelBorderColorSelected), "*button_primary_border_color" },
{ nameof(Theme.CheckboxLabelBorderWidth), "*button_border_width" },
{ nameof(Theme.CheckboxBackgroundColor), "*input_background_fill" },
{ nameof(Theme.CheckboxLabelBackgroundFillSelected), "*button_primary_background_fill" },
{ nameof(Theme.CheckboxLabelTextColorSelected), "*button_primary_text_color" },
{ nameof(Theme.CheckboxLabelPadding), "*spacing_sm" },
{ nameof(Theme.ButtonLargePadding), "*spacing_lg" },
{ nameof(Theme.ButtonSmallPadding), "*spacing_sm" },
{ nameof(Theme.ShadowDropLg), "0 1px 4px 0 rgb(0 0 0 / 0.1)" },
{ nameof(Theme.BlockShadow), "none" },
{ nameof(Theme.BlockShadowDark), "*shadow_drop_lg" },
{ nameof(Theme.BlockTitleTextWeight), "600" },
{ nameof(Theme.BlockLabelTextWeight), "600" },
{ nameof(Theme.BlockLabelTextSize), "*text_md" },

        },
            primaryHue: Colors.Neutral,
        secondaryHue: Colors.Neutral,
        neutralHue: Colors.Neutral,
        spacingSize: Sizes.SpacingLg,
        radiusSize: Sizes.RadiusNone,
        textSize: Sizes.TextMd,
        fonts: new List<Font> { new GoogleFont("Lora"), new LocalFont("ui-sans-serif"), new LocalFont("system-ui"), new LocalFont("sans-serif") },
        fontMonos: new List<Font> { new LocalFont("IBM Plex Mono"), new LocalFont("ui-monospace"), new LocalFont("Consolas"), new LocalFont("monospace") }
        );


        public static Theme Ocean => new Theme("ocean", new Dictionary<string, string>
             {
                 { nameof(Theme.ButtonBorderWidth), "0px" },
{ nameof(Theme.CheckboxLabelBorderWidth), "1px" },
{ nameof(Theme.ButtonTransformHover), "scale(1.02)" },
{ nameof(Theme.ButtonTransition), "all 0.1s ease-in-out" },
{ nameof(Theme.SliderColor), "*primary_400" },
{ nameof(Theme.ButtonPrimaryBackgroundFill), "linear-gradient(120deg, *secondary_500 0%, *primary_300 60%, *primary_400 100%)" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHover), "linear-gradient(120deg, *secondary_400 0%, *primary_300 60%, *primary_300 100%)" },
{ nameof(Theme.ButtonPrimaryTextColor), "*button_secondary_text_color" },
{ nameof(Theme.ButtonSecondaryBackgroundFill), "linear-gradient(120deg, *neutral_300 0%, *neutral_100 60%, *neutral_200 100%)" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHover), "linear-gradient(120deg, *neutral_200 0%, *neutral_100 60%, *neutral_100 100%)" },
{ nameof(Theme.CheckboxLabelBackgroundFillSelected), "linear-gradient(120deg, *primary_400 0%, *primary_300 60%, *primary_400 100%)" },
{ nameof(Theme.CheckboxLabelBorderColorSelected), "*primary_400" },
{ nameof(Theme.CheckboxBackgroundColorSelected), "*primary_400" },
{ nameof(Theme.CheckboxLabelTextColorSelected), "*button_secondary_text_color" },
{ nameof(Theme.SliderColorDark), "*primary_500" },
{ nameof(Theme.ButtonPrimaryBackgroundFillDark),"linear-gradient(120deg, *secondary_600 0%, *primary_500 60%, *primary_600 100%)" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHoverDark),"linear-gradient(120deg, *secondary_500 0%, *primary_500 60%, *primary_500 100%)" },
{ nameof(Theme.ButtonPrimaryTextColorDark), "*button_secondary_text_color" },
{ nameof(Theme.ButtonSecondaryBackgroundFillDark),"linear-gradient(120deg, *neutral_700 0%, *neutral_600 60%, *neutral_700 100%)" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHoverDark),"linear-gradient(120deg, *neutral_600 0%, *neutral_600 60%, *neutral_700 100%)"},
{ nameof(Theme.CheckboxLabelBackgroundFillSelectedDark), "linear-gradient(120deg, *primary_600 0%, *primary_500 60%, *primary_600 100%)" },
{ nameof(Theme.CheckboxLabelBorderColorSelectedDark), "*primary_600" },
{ nameof(Theme.CheckboxBackgroundColorSelectedDark), "*primary_600" },
{ nameof(Theme.CheckboxLabelTextColorSelectedDark), "*button_secondary_text_color" },
{ nameof(Theme.BlockShadow), "*shadow_drop_lg" },
{ nameof(Theme.ButtonSecondaryShadowHover), "*shadow_drop_lg" },
{ nameof(Theme.ButtonPrimaryShadowHover),"0 1px 3px 0 *primary_200, 0 1px 2px -1px *primary_200" },
{ nameof(Theme.ButtonSecondaryShadowDark), "none" },
{ nameof(Theme.ButtonPrimaryShadowDark), "none" },
             },
         primaryHue: Colors.Emerald,
   secondaryHue: Colors.Sky,
   neutralHue: Colors.Zinc,
   spacingSize: Sizes.SpacingMd,
   radiusSize: Sizes.RadiusXxl,
   textSize: Sizes.TextMd,
   fonts: new List<Font> { new GoogleFont("IBM Plex Sans"), new LocalFont("ui-sans-serif"), new LocalFont("system-ui"), new LocalFont("sans-serif") },

   fontMonos: new List<Font> { new GoogleFont("Inter"), new LocalFont("ui-monospace"), new LocalFont("Consolas"), new LocalFont("monospace") }
   );


        public static Theme Origin => new Theme("origin", new Dictionary<string, string>
            {
                { nameof(Theme.InputBackgroundFillDark), "*neutral_800" },
{ nameof(Theme.ErrorBackgroundFill), Colors.Red.C50 },
{ nameof(Theme.ErrorBackgroundFillDark), "*neutral_900" },
{ nameof(Theme.ErrorBorderColor), Colors.Red.C700 },
{ nameof(Theme.ErrorBorderColorDark), Colors.Red.C500 },
{ nameof(Theme.ErrorIconColor), Colors.Red.C700 },
{ nameof(Theme.ErrorIconColorDark), Colors.Red.C500 },
{ nameof(Theme.ButtonTransition), "none" },
{ nameof(Theme.ButtonPrimaryShadow), "*shadow_drop" },
{ nameof(Theme.ButtonPrimaryShadowHover), "*shadow_drop_lg" },
{ nameof(Theme.ButtonPrimaryShadowActive), "*shadow_inset" },
{ nameof(Theme.ButtonSecondaryShadow), "*shadow_drop" },
{ nameof(Theme.ButtonSecondaryShadowHover), "*shadow_drop_lg" },
{ nameof(Theme.ButtonSecondaryShadowActive), "*shadow_inset" },
{ nameof(Theme.InputShadow),"0 0 0 *shadow_spread transparent, *shadow_inset" },
{ nameof(Theme.InputShadowFocus), "0 0 0 *shadow_spread *secondary_50, *shadow_inset" },
{ nameof(Theme.InputShadowFocusDark), "0 0 0 *shadow_spread *neutral_700, *shadow_inset" },
{ nameof(Theme.CheckboxLabelShadow), "*shadow_drop" },
{ nameof(Theme.BlockShadow), "*shadow_drop" },
{ nameof(Theme.FormGapWidth), "1px" },
{ nameof(Theme.ButtonBorderWidth), "1px" },
{ nameof(Theme.ButtonBorderWidthDark), "1px" },
{ nameof(Theme.InputBorderWidth), "1px" },
{ nameof(Theme.InputBackgroundFill), "white" },
{ nameof(Theme.StatBackgroundFill), "linear-gradient(to right, *primary_400, *primary_200)" },
{ nameof(Theme.StatBackgroundFillDark), "linear-gradient(to right, *primary_400, *primary_600)" },
{ nameof(Theme.CheckboxLabelBackgroundFill),"linear-gradient(to top, *neutral_50, white)" },
{ nameof(Theme.CheckboxLabelBackgroundFillDark), "linear-gradient(to top, *neutral_900, *neutral_800)" },
{ nameof(Theme.CheckboxLabelBackgroundFillHover),"linear-gradient(to top, *neutral_100, white)" },
{ nameof(Theme.CheckboxLabelBackgroundFillHoverDark),"linear-gradient(to top, *neutral_900, *neutral_800)" },
{ nameof(Theme.ButtonPrimaryBackgroundFill),"linear-gradient(to bottom right, *primary_100, *primary_300)" },
{ nameof(Theme.ButtonPrimaryBackgroundFillDark),"linear-gradient(to bottom right, *primary_500, *primary_600)" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHover),"linear-gradient(to bottom right, *primary_100, *primary_200)" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHoverDark),"linear-gradient(to bottom right, *primary_500, *primary_500)" },
{ nameof(Theme.ButtonPrimaryBorderColor), "*primary_200" },
{ nameof(Theme.ButtonPrimaryBorderColorDark), "*primary_500" },
{ nameof(Theme.ButtonPrimaryBorderColorHover), "*button_primary_border_color" },
{ nameof(Theme.ButtonPrimaryBorderColorHoverDark), "*primary_500" },
{ nameof(Theme.ButtonPrimaryTextColor), "*primary_600" },
{ nameof(Theme.ButtonPrimaryTextColorDark), "white" },
{ nameof(Theme.ButtonSecondaryBackgroundFill),"linear-gradient(to bottom right, *neutral_100, *neutral_200)" },
{ nameof(Theme.ButtonSecondaryBackgroundFillDark), "linear-gradient(to bottom right, *neutral_600, *neutral_700)" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHover), "linear-gradient(to bottom right, *neutral_100, *neutral_100)" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHoverDark), "linear-gradient(to bottom right, *neutral_600, *neutral_600)" },
{ nameof(Theme.ButtonSecondaryBorderColor), "*neutral_200" },
{ nameof(Theme.ButtonSecondaryBorderColorDark), "*neutral_600" },
{ nameof(Theme.ButtonSecondaryBorderColorHover), "*neutral_200" },
{ nameof(Theme.ButtonSecondaryBorderColorHoverDark), "*neutral_600" },
{ nameof(Theme.ButtonSecondaryTextColor), "*neutral_800" },
{ nameof(Theme.ButtonSecondaryTextColorDark), "white" },
{ nameof(Theme.ButtonCancelBackgroundFill), $"linear-gradient(to bottom right, {Colors.Red.C100}, {Colors.Red.C200})" },
{ nameof(Theme.ButtonCancelBackgroundFillDark), $"linear-gradient(to bottom right, {Colors.Red.C600}, {Colors.Red.C700})" },
{ nameof(Theme.ButtonCancelBackgroundFillHover), $"linear-gradient(to bottom right, {Colors.Red.C100}, {Colors.Red.C100})" },
{ nameof(Theme.ButtonCancelBackgroundFillHoverDark),$"linear-gradient(to bottom right, {Colors.Red.C600}, {Colors.Red.C600})" },
{ nameof(Theme.ButtonCancelBorderColor), Colors.Red.C200 },
{ nameof(Theme.ButtonCancelBorderColorDark), Colors.Red.C600 },
{ nameof(Theme.ButtonCancelBorderColorHover), Colors.Red.C200 },
{ nameof(Theme.ButtonCancelBorderColorHoverDark), Colors.Red.C600 },
{ nameof(Theme.ButtonCancelTextColor), Colors.Red.C600 },
{ nameof(Theme.ButtonCancelTextColorDark), "white" },
{ nameof(Theme.BorderColorAccentSubdued), "*primary_200" },
{ nameof(Theme.ButtonTransformHover), "none" },

            },
primaryHue: Colors.Orange,
    secondaryHue: Colors.Blue,
    neutralHue: Colors.Gray,
    spacingSize: Sizes.SpacingMd,
    radiusSize: Sizes.RadiusMd,
    textSize: Sizes.TextMd,
    fonts: new List<Font> { new GoogleFont("Source Sans Pro"), new LocalFont("ui-sans-serif"), new LocalFont("system-ui"), new LocalFont("sans-serif") },
    fontMonos: new List<Font> { new LocalFont("IBM Plex Mono"), new LocalFont("ui-monospace"), new LocalFont("Consolas"), new LocalFont("monospace") }
   );

        public static Theme Soft => new Theme("soft", new Dictionary<string, string>
        {
            { nameof(Theme.BackgroundFillPrimary), "*neutral_50" },
{ nameof(Theme.SliderColor), "*primary_500" },
{ nameof(Theme.SliderColorDark), "*primary_600" },
{ nameof(Theme.ShadowDrop), "0 1px 4px 0 rgb(0 0 0 / 0.1)" },
{ nameof(Theme.ShadowDropLg), "0 2px 5px 0 rgb(0 0 0 / 0.1)" },
{ nameof(Theme.BlockBackgroundFill), "white" },
{ nameof(Theme.BlockLabelPadding), "*spacing_sm *spacing_md" },
{ nameof(Theme.BlockLabelBackgroundFill), "*primary_100" },
{ nameof(Theme.BlockLabelBackgroundFillDark), "*primary_600" },
{ nameof(Theme.BlockLabelRadius), "*radius_md" },
{ nameof(Theme.BlockLabelTextSize), "*text_md" },
{ nameof(Theme.BlockLabelTextWeight), "600" },
{ nameof(Theme.BlockLabelTextColor), "*primary_500" },
{ nameof(Theme.BlockLabelTextColorDark), "white" },
{ nameof(Theme.BlockTitleRadius), "*block_label_radius" },
{ nameof(Theme.BlockTitlePadding), "*block_label_padding" },
{ nameof(Theme.BlockTitleBackgroundFill), "*block_label_background_fill" },
{ nameof(Theme.BlockTitleTextWeight), "600" },
{ nameof(Theme.BlockTitleTextColor), "*primary_500" },
{ nameof(Theme.BlockTitleTextColorDark), "white" },
{ nameof(Theme.BlockLabelMargin), "*spacing_md" },
{ nameof(Theme.InputBackgroundFill), "white" },
{ nameof(Theme.InputBorderColor), "*neutral_50" },
{ nameof(Theme.InputShadow), "*shadow_drop" },
{ nameof(Theme.InputShadowFocus), "*shadow_drop_lg" },
{ nameof(Theme.CheckboxShadow), "none" },
{ nameof(Theme.ShadowSpread), "6px" },
{ nameof(Theme.ButtonPrimaryShadow), "*shadow_drop_lg" },
{ nameof(Theme.ButtonPrimaryShadowHover), "*shadow_drop_lg" },
{ nameof(Theme.ButtonPrimaryShadowActive), "*shadow_inset" },
{ nameof(Theme.ButtonSecondaryShadow), "*shadow_drop_lg" },
{ nameof(Theme.ButtonSecondaryShadowHover), "*shadow_drop_lg" },
{ nameof(Theme.ButtonSecondaryShadowActive), "*shadow_inset" },
{ nameof(Theme.CheckboxLabelShadow), "*shadow_drop_lg" },
{ nameof(Theme.ButtonPrimaryBackgroundFill), "*primary_500" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHover), "*primary_400" },
{ nameof(Theme.ButtonPrimaryBackgroundFillHoverDark), "*primary_500" },
{ nameof(Theme.ButtonPrimaryTextColor), "white" },
{ nameof(Theme.ButtonSecondaryBackgroundFill), "white" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHover), "*neutral_100" },
{ nameof(Theme.ButtonSecondaryBackgroundFillHoverDark), "*primary_500" },
{ nameof(Theme.ButtonSecondaryTextColor), "*neutral_800" },
{ nameof(Theme.ButtonCancelBackgroundFill), "*button_secondary_background_fill" },
{ nameof(Theme.ButtonCancelBackgroundFillHover), "*button_secondary_background_fill_hover" },
{ nameof(Theme.ButtonCancelBackgroundFillHoverDark), "*button_secondary_background_fill_hover" },
{ nameof(Theme.ButtonCancelTextColor), "*button_secondary_text_color" },
{ nameof(Theme.CheckboxLabelBackgroundFillSelected), "*primary_500" },
{ nameof(Theme.CheckboxLabelBackgroundFillSelectedDark), "*primary_600" },
{ nameof(Theme.CheckboxBorderWidth), "1px" },
{ nameof(Theme.CheckboxBorderColor), "*neutral_100" },
{ nameof(Theme.CheckboxBorderColorDark), "*neutral_600" },
{ nameof(Theme.CheckboxBackgroundColorSelected), "*primary_600" },
{ nameof(Theme.CheckboxBackgroundColorSelectedDark), "*primary_700" },
{ nameof(Theme.CheckboxBorderColorFocus), "*primary_500" },
{ nameof(Theme.CheckboxBorderColorFocusDark), "*primary_600" },
{ nameof(Theme.CheckboxBorderColorSelected), "*primary_600" },
{ nameof(Theme.CheckboxBorderColorSelectedDark), "*primary_700" },
{ nameof(Theme.CheckboxLabelTextColorSelected), "white" },
{ nameof(Theme.BlockBorderWidth), "0px" },
{ nameof(Theme.PanelBorderWidth), "1px" },

        },
            primaryHue: Colors.Indigo,
        secondaryHue: Colors.Indigo,
        neutralHue: Colors.Gray,
        spacingSize: Sizes.SpacingMd,
        radiusSize: Sizes.RadiusMd,
        textSize: Sizes.TextMd,
        fonts: new List<Font> { new LocalFont("Montserrat"), new LocalFont("ui-sans-serif"), new LocalFont("system-ui"), new LocalFont("sans-serif") },
        fontMonos: new List<Font> { new LocalFont("IBM Plex Mono"), new LocalFont("ui-monospace"), new LocalFont("Consolas"), new LocalFont("monospace") }
        );
    }
}
